(()=>{"use strict";const e=({namedId:e,title:t,creationDate:n})=>{let c=document.createElement("a");c.setAttribute("href",`/documents/${e}`),c.setAttribute("class","document");let o=document.createElement("div");o.setAttribute("class","document__icon");let a=document.createElement("div");a.setAttribute("class","document__info");let r=document.createElement("p");r.setAttribute("class","document__info__title"),r.innerText=t;let s=document.createElement("p");return s.setAttribute("class","document__info__date"),s.innerText=n,a.append(r,s),c.append(o,a),c};let t=document.getElementById("mainDocumentEnd"),n=document.getElementById("otherDocumentsContainer");var c;(c=async function(){await fetch("/api/documents/pages/random").then((e=>e.json())).then((({content:t})=>{let c=t.map((t=>e(t)));n.append(...c)})).catch((e=>{console.error(e)}))},new IntersectionObserver(((e,t)=>{e.forEach((async e=>{e.isIntersecting&&(await c(),t.unobserve(e.target))}))}))).observe(t)})();